apply plugin: 'com.android.library'
//apply plugin: 'blockcanaryex'
//
//block {
//    //library project only has release status
//    releaseEnabled true //enable MethodSampler when release mode, default false
//    excludePackages = ['com.android', 'android.support'] //exclude the package you don't want to inject MethodSampler, eg: ['com.android', 'android.support']
//    excludeClasses = [] //exclude the class you don't want to inject MethodSampler
//    includePackages = [] //only include the package you want to inject MethodSampler, packages which don't included will not be injected
//
//    scope {
//        project true //inject MethodSampler for app project, default true
//        projectLocalDep false //inject MethodSampler for app libs(eg: .jar), default false
//        subProject true //inject MethodSampler for subProject of app project, default true
//        subProjectLocalDep false //inject MethodSampler for subProject libs, default false
//        externalLibraries false //inject MethodSampler external libs, default false
//    }
//}

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt')
        }
    }
}

String SDK_DIR = System.getenv("ANDROID_HOME")
if(SDK_DIR == null) {
    Properties props = new Properties()
    props.load(new FileInputStream(project.rootProject.file("local.properties")))
    SDK_DIR = props.get('sdk.dir');
}

dependencies {
    provided files("${SDK_DIR}/platforms/android-23/data/layoutlib.jar")
    compile project(':BlockCanaryExJRT')
}
